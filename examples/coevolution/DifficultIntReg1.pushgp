# Copyright 2009-2010 Jon Klein
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# A difficult int symbolic regression problem that needs many test cases. Will
# be used to test TestCaseGenerator.java. The problem to be solved is 
#                          y = 9x^3 + 24x^2 - 3x + 10
#
# Tom Helmuth
# 8/9/10
#

### Setup required parameters

population-size = 150
max-generations = 20000
execution-limit = 200

mutation-percent = 10
crossover-percent = 80
simplification-percent = 5

tournament-size = 7
max-points-in-program = 100

max-random-code-size = 40
simplify-flatten-percent = 10

reproduction-simplifications = 25
report-simplifications = 100
final-simplifications = 2000

### Setup problem class and test cases.

problem-class = org.spiderland.Psh.ProbClass.IntSymbolicRegression
instruction-set = (registered.integer registered.exec input.makeinputs1)

test-case-class = org.spiderland.Psh.TestCase.IntRegTestCases1

### Setup Optional Parameters

trivial-geography-radius = 10
simplify-flatten-percent = 5
mutation-mode = fair
fair-mutation-range = .5

min-random-integer = -100
max-random-integer = 100
random-integer-resolution = 1

target-function-string = y = 9x^3 + 24x^2 - 3x + 10
