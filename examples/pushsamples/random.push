((code.swap (((exec.stackdepth code.= (((exec.do*range boolean.swap) integer.dup) (exec.do*range boolean.swap) ((exec.do*range boolean.swap) (integer.rot)))) boolean.swap) (integer.*)) exec.stackdepth) (((boolean.pop ((exec.do*range boolean.swap) ((true code.= (((integer.pop boolean.swap) integer.dup) ((exec.do*range (integer.* integer.swap (exec.if exec.=))) (code.swap)) (code.= ((exec.do*range boolean.swap))))) (exec.stackdepth code.= (((exec.do*range ((exec.do*range boolean.swap) (integer.pop))) integer.dup) ((exec.do*range boolean.swap) (code.swap)) ((exec.do*range boolean.swap) (integer.rot)))))) (code.stackdepth)) (code.do*times integer.+))) (code.do*count code.if) exec.stackdepth)
10000
19
